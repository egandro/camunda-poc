helm --namespace camunda install dev camunda/camunda-platform \
        -f ./camunda-platform-core-kind-values.yaml
NAME: dev
LAST DEPLOYED: Fri Aug  4 23:45:51 2023
NAMESPACE: camunda
STATUS: deployed
REVISION: 1
NOTES:
# (camunda-platform - 8.2.10)
   ___   _   __  __ _   _ _  _ ___   _     ___ _      _ _____ ___ ___  ___ __  __
  / __| /_\ |  \/  | | | | \| |   \ /_\   | _ \ |    /_\_   _| __/ _ \| _ \  \/  |
 | (__ / _ \| |\/| | |_| | .` | |) / _ \  |  _/ |__ / _ \| | | _| (_) |   / |\/| |
  \___/_/ \_\_|  |_|\___/|_|\_|___/_/ \_\ |_| |____/_/ \_\_| |_| \___/|_|_\_|  |_|


## Installed Services:

- Zeebe:
  - Enabled: true
  - Docker Image used for Zeebe: camunda/zeebe:8.2.10
  - Zeebe Cluster Name: "dev-zeebe"
  - Prometheus ServiceMonitor Enabled: false
- Operate:
  - Enabled: true
  - Docker Image used for Operate: camunda/operate:8.2.10
- Tasklist:
  - Enabled: true
  - Docker Image used for Tasklist: camunda/tasklist:8.2.10
- Optimize:
  - Enabled: false
- Connectors:
  - Enabled: true
  - Docker Image used for Connectors: camunda/connectors-bundle:0.21.4
- Identity:
  - Enabled: false
- Web Modeler:
  - Enabled: false
- Elasticsearch:
  - Enabled: true
  - Elasticsearch URL: http://elasticsearch-master:9200

### Zeebe

The Cluster itself is not exposed as a service which means that you can use `kubectl port-forward` to access the Zeebe cluster from outside Kubernetes:

> kubectl port-forward svc/dev-zeebe-gateway 26500:26500 -n camunda

Now you can connect your workers and clients to `localhost:26500`
### Connecting to Web apps


As part of the Helm charts, an ingress definition can be deployed, but you require to have an Ingress Controller for that Ingress to be Exposed.
In order to deploy the ingress manifest, set `<service>.ingress.enabled` to `true`. Example: `operate.ingress.enabled=true`

If you don't have an ingress controller you can use `kubectl port-forward` to access the deployed web application from outside the cluster:


Operate:
> kubectl port-forward svc/dev-operate  8081:80
Tasklist:
> kubectl port-forward svc/dev-tasklist 8082:80

Connectors:
> kubectl port-forward svc/dev-connectors 8088:8080


Now you can point your browser to one of the service's login pages. Example: http://localhost:8081 for Operate.

Default user and password: "demo/demo"
